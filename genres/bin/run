const axios = require('axios');
const http = require('http');
require('dotenv').config();

const config = require('../config')[process.env.NODE_ENV || 'development'];
const service = require('../server')(config);
const server = http.createServer(service);
server.listen(process.env.PORT || 5002);

server.on('listening', () => {
    const registerService = () =>
        axios
            .put(`${config.serviceRegistryUrl}/${config.name}/${config.version}/${server.address().port}`)
            .catch((err) => console.error(err));
    const unregisterService = () =>
        axios
            .delete(`${config.serviceRegistryUrl}/${config.name}/${config.version}/${server.address().port}`)
            .catch((err) => console.error(err));

    registerService();
    const interval = setInterval(registerService, 15000);
    const cleanup = async () => {
        let clean = false;
        if (!clean) {
            clean = true;
            clearInterval(interval);
            await unregisterService();
        }
    };

    process.on('uncaughtException', async () => {
        await cleanup();
        process.exit(0);
    });

    process.on('SIGINT', async () => {
        await cleanup();
        process.exit(0);
    });

    process.on('SIGTERM', async () => {
        await cleanup();
        process.exit(0);
    });

    console.info(`Hi there! I'm running on port ${server.address().port} in ${service.get('env')} mode.`);
});
